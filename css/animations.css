/* Header animation */
.header {
    animation: fadeInDown 1s ease forwards;
    perspective: 1000px; /* Add perspective for 3D effect */
    background: linear-gradient(-45deg, #3a86ff, #8338ec, #3a86ff, #8338ec);
    background-size: 400% 400%;
    position: relative;
    overflow: hidden;
}

/* Navigation animation */
.navigation {
    animation: slideInLeft 1s ease forwards;
    perspective: 1000px; /* Add perspective for 3D effect */
}

/* Menu items animation */
.menu-item {
    animation: slideInRight 1s ease forwards;
    perspective: 1000px; /* Add perspective for 3D effect */
}

/* Section animation */
.section {
    animation: slideInUp 1s ease forwards;
    perspective: 1000px; /* Add perspective for 3D effect */
}

/* Title animation */
.section-title {
    animation: fadeInLeft 1s ease forwards;
    perspective: 1000px; /* Add perspective for 3D effect */
}

/* Text animation */
.section-text {
    animation: fadeInRight 1s ease forwards;
    perspective: 1000px; /* Add perspective for 3D effect */
}

/* Link animation */
.section-link {
    animation: fadeInUp 1s ease forwards;
    perspective: 1000px; /* Add perspective for 3D effect */
}

/* Parallax scroll effect for background image */
.parallax {
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    perspective: 1000px; /* Add perspective for 3D effect */
    overflow: hidden;
    position: relative;
    transform-style: preserve-3d; /* Preserve 3D transformations */
}

/* Parallax scroll effect keyframes */
@keyframes parallaxScroll {
    from {
        transform: translateY(0);
    }
    to {
        transform: translateY(-50%);
    }
}

/* Keyframes for animations */
@keyframes fadeInDown {
    from {
        opacity: 0;
        transform: translateY(-50px) rotateX(-90deg); /* Add rotation for 3D effect */
    }
    to {
        opacity: 1;
        transform: translateY(0) rotateX(0); /* Add rotation for 3D effect */
    }
}

@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-50px) rotateY(-90deg); /* Add rotation for 3D effect */
    }
    to {
        opacity: 1;
        transform: translateX(0) rotateY(0); /* Add rotation for 3D effect */
    }
}

@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(50px) rotateY(90deg); /* Add rotation for 3D effect */
    }
    to {
        opacity: 1;
        transform: translateX(0) rotateY(0); /* Add rotation for 3D effect */
    }
}

@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(50px) rotateX(90deg); /* Add rotation for 3D effect */
    }
    to {
        opacity: 1;
        transform: translateY(0) rotateX(0); /* Add rotation for 3D effect */
    }
}

@keyframes fadeInLeft {
    from {
        opacity: 0;
        transform: translateX(-50px) rotateY(-90deg); /* Add rotation for 3D effect */
    }
    to {
        opacity: 1;
        transform: translateX(0) rotateY(0); /* Add rotation for 3D effect */
    }
}

@keyframes fadeInRight {
    from {
        opacity: 0;
        transform: translateX(50px) rotateY(90deg); /* Add rotation for 3D effect */
    }
    to {
        opacity: 1;
        transform: translateX(0) rotateY(0); /* Add rotation for 3D effect */
    }
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(50px) rotateX(90deg); /* Add rotation for 3D effect */
    }
    to {
        opacity: 1;
        transform: translateY(0) rotateX(0); /* Add rotation for 3D effect */
    }
}

/* Animated background */
@keyframes gradientBG {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

/* Glowing text effect */
@keyframes glowText {
    0% {
        text-shadow: 0 0 10px rgba(58, 134, 255, 0.8),
                     0 0 20px rgba(58, 134, 255, 0.8),
                     0 0 30px rgba(58, 134, 255, 0.8);
    }
    50% {
        text-shadow: 0 0 20px rgba(131, 56, 236, 0.8),
                     0 0 30px rgba(131, 56, 236, 0.8),
                     0 0 40px rgba(131, 56, 236, 0.8);
    }
    100% {
        text-shadow: 0 0 10px rgba(58, 134, 255, 0.8),
                     0 0 20px rgba(58, 134, 255, 0.8),
                     0 0 30px rgba(58, 134, 255, 0.8);
    }
}

/* Floating animation */
@keyframes float {
    0% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-10px);
    }
    100% {
        transform: translateY(0px);
    }
}

/* Typing animation */
@keyframes typing {
    from {
        width: 0;
    }
    to {
        width: 100%;
    }
}

/* Cursor blink */
@keyframes blink {
    50% {
        border-color: transparent;
    }
}

/* Shine effect */
@keyframes shine {
    0% {
        background-position: -100% 50%;
    }
    100% {
        background-position: 200% 50%;
    }
}

/* Grid animation */
@keyframes gridMove {
    0% {
        background-position: 0px 0px;
    }
    100% {
        background-position: 40px 40px;
    }
}

/* Futuristic decorative elements */
.header::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, 
        transparent, 
        rgba(255, 255, 255, 0.5), 
        transparent);
    animation: shine 2s infinite;
}

/* Home button animation */
.home-button {
    position: relative;
    overflow: hidden;
}

.home-button::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        45deg,
        transparent,
        rgba(255, 255, 255, 0.1),
        transparent
    );
    transform: rotate(45deg);
    animation: shine 3s infinite;
}

/* Scroll reveal animations */
.reveal {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s ease;
}

.reveal.active {
    opacity: 1;
    transform: translateY(0);
}

/* Scroll progress indicator */
.scroll-progress {
    position: fixed;
    top: 0;
    left: 0;
    width: 0%;
    height: 3px;
    background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
    z-index: 1000;
    transition: width 0.2s ease;
}

/* 3D Card effect */
.feature-item {
    transform-style: preserve-3d;
    perspective: 1000px;
}

.feature-item:hover {
    transform: rotateX(10deg) rotateY(10deg) scale(1.05);
}

/* Neon text effect */
@keyframes neon {
    0%, 100% {
        text-shadow: 
            0 0 10px rgba(58, 134, 255, 0.8),
            0 0 20px rgba(58, 134, 255, 0.8),
            0 0 30px rgba(58, 134, 255, 0.8),
            0 0 40px rgba(58, 134, 255, 0.8);
    }
    50% {
        text-shadow: 
            0 0 20px rgba(131, 56, 236, 0.8),
            0 0 30px rgba(131, 56, 236, 0.8),
            0 0 40px rgba(131, 56, 236, 0.8),
            0 0 50px rgba(131, 56, 236, 0.8);
    }
}

/* Matrix rain effect for header */
@keyframes matrixRain {
    0% {
        background-position: 0% 0%;
    }
    100% {
        background-position: 0% 100%;
    }
}

.matrix-bg {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(180deg, 
        rgba(0, 0, 0, 0) 0%,
        rgba(32, 224, 187, 0.2) 50%,
        rgba(32, 224, 187, 0) 100%);
    background-size: 100% 1000%;
    animation: matrixRain 20s linear infinite;
    pointer-events: none;
    opacity: 0.3;
}

/* Hover effect for sections */
.section {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.section:hover {
    transform: translateY(-5px) scale(1.01);
    box-shadow: 
        0 10px 20px rgba(0, 0, 0, 0.1),
        0 6px 6px rgba(0, 0, 0, 0.1);
}

/* Floating icons animation */
@keyframes floatIcon {
    0%, 100% {
        transform: translateY(0) rotate(0);
    }
    25% {
        transform: translateY(-5px) rotate(-5deg);
    }
    75% {
        transform: translateY(5px) rotate(5deg);
    }
}

.feature-item i {
    animation: floatIcon 3s ease-in-out infinite;
}

/* Glitch effect for title */
@keyframes glitch {
    0% {
        transform: translate(0);
    }
    20% {
        transform: translate(-2px, 2px);
    }
    40% {
        transform: translate(-2px, -2px);
    }
    60% {
        transform: translate(2px, 2px);
    }
    80% {
        transform: translate(2px, -2px);
    }
    100% {
        transform: translate(0);
    }
}

.title:hover {
    animation: glitch 0.3s cubic-bezier(.25,.46,.45,.94) both infinite;
}

/* Smooth scroll behavior */
html {
    scroll-behavior: smooth;
}

/* Scroll to top button animation */
.scroll-top {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background: var(--primary-color);
    color: white;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    opacity: 0;
    transition: all 0.3s ease;
    transform: translateY(100px);
}

.scroll-top.visible {
    opacity: 1;
    transform: translateY(0);
}

.scroll-top:hover {
    transform: translateY(-5px);
    background: var(--secondary-color);
}

/* Add existing animations here... */
// ... existing code ...

/* Add this JavaScript to the end of your HTML file */
<script>
// Scroll reveal
function reveal() {
    var reveals = document.querySelectorAll(".reveal");
    reveals.forEach(element => {
        var windowHeight = window.innerHeight;
        var elementTop = element.getBoundingClientRect().top;
        var elementVisible = 150;
        
        if (elementTop < windowHeight - elementVisible) {
            element.classList.add("active");
        }
    });
}

// Scroll progress
function updateScrollProgress() {
    const scrollProgress = document.querySelector('.scroll-progress');
    const scrolled = (window.scrollY / (document.documentElement.scrollHeight - window.innerHeight)) * 100;
    scrollProgress.style.width = scrolled + '%';
}

// Scroll to top button
function toggleScrollTopButton() {
    const scrollTop = document.querySelector('.scroll-top');
    if (window.scrollY > 500) {
        scrollTop.classList.add('visible');
    } else {
        scrollTop.classList.remove('visible');
    }
}

window.addEventListener('scroll', reveal);
window.addEventListener('scroll', updateScrollProgress);
window.addEventListener('scroll', toggleScrollTopButton);
</script>
